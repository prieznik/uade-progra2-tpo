        /*
            Ejercicio 7:

            Se poseen dos diccionarios simples (mapeos) M1 y M2 cuyas entradas tienen por
            clave un número de dni, y por value la nota de una materia (0 a 10) (M1 tiene las
            notas de una materia A y M2 de una materia B).

            • Implementar un programa que permita al usuario cargar DNI y nota
            completando ambos mapeos y luego visualizar todos los datos cargados.

                Necesitamos clase materia con:
                    nombre: "matematica",
                    diccionario: {
                        29303: 8,
                        11111: 10
                    },
                    ingresarNota(dni,nota),
                    imprimirDiccionario(),


                // ingresarNota(dni,nota):
                1) Scanner que solicite al usuario ingresar una numero dni.
                2) Scanner que solicite al usuario ingresar una nota.
                3) Agregar key (dni) value (nota) al diccionario.

                // imprimirDiccionario():
                  Para cada elemento del diciconario imprimir key-value (entries).


            Utilizar estructuras estáticas.
            • Realice un comando llamado unir que reciba los dos mapeos M1 y M2 y
            devuelva una lista L con TODOS aquellos elementos E1 de M1 y E2 de M2
            que coincidan en la clave, pero tengan un valor diferente.

            Caso 1: Necesitamos clase unionDiccionarios con:
                listaUnificada: [],
                unirDos(dic1, dic2),
                imprimirListaUnificada()

                // unirDos(dic1,dic1):
                Esto recibiria obligatoriamente dos diccionarios.


            Por ejemplo, si
            E1= (DNI: 29303, Nota: 8) pertenece a M1 y
            E2= (DNI: 29303, Nota: 7) pertenece a M2,
            entonces E1 y E2 serán puestos en L.

            M1 = {
                29303: 8,
                11111: 10
            }

            M2 = {
                29303: 7,
                11111: 10,
            }

            L = ???

         */
